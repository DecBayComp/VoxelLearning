from django.test import TestCase
from django.test import Client
from django.contrib.auth.models import User
from jobapp.models import JobType
from diva_cloud import settings

class Simple_train_demo(TestCase):
    c = Client()
    def setUp(self):
        # [Prepare] Create a user and login
        self.user = User.objects.create_user(
            username='demouser', password='12345')
        login = self.c.login(username='demouser', password='12345')
        # [Check] Log in worked
        self.assertTrue(login)
        # [Prepare] Create a 'init' jobtype
        JobType.objects.create(name="init", version=1.0, description="Init a job")
        JobType.objects.create(name="train", version=1.0, description="Training job by Jean-Baptiste M.")

    def test_demo(self):
        print()
        input("### START SIMPLE TRAIN DEMO ### ")
        print()
        print()
        print("----------------------------------------------------")
        print("> Create a 'init' Job")
        print('===request===')
        input("POST {'type': 'init'} ==> http://127.0.0.1:8000/jobs/")
        print()
        print('---response---')
        response = self.c.post('/jobs/', {'type': 'init'})
        print(response.json())
        jobid = str(response.json()['id'])
        input()
        print()
        print("----------------------------------------------------")
        print("> Post a file in job " + jobid)
        print('===request===')
        input("POST {'file': test_features.csv} ==> http://127.0.0.1:8000/jobs/" + jobid + "/files/")
        print()
        print('---response---')
        with open(settings.TEST_ROOT + "/test_features.csv") as fp:
            response = self.c.post(
                '/jobs/' + jobid + '/files/', {'name': 'file', 'filename': 'test', 'file': fp})
        fp.close()
        fileid = str(response.json()['id'])
        print(response.json())
        input()
        print()
        print("----------------------------------------------------")
        print("> PUT a train request to the job " + jobid + " with the input features in file " + fileid)
        print('===request===')
        input("PUT {'type': 'train', 'inputs': {'inputs_features': " + fileid + "}} ==> http://127.0.0.1:8000/jobs/")
        print()
        print('---response---')
        response = self.c.put('/jobs/' + jobid, {'type': 'train', 'inputs': {'inputs_features': fileid}}, content_type='application/json')
        print(response.json())
        outputid = str(response.json()['outputs']['outputs_files'][0])
        input()
        print()
        print("----------------------------------------------------")
        print("> Get the output file " + outputid + " of the job " + jobid)
        print('===request===')
        input("GET (Accept: application/json) ==> http://127.0.0.1:8000/jobs/" + jobid + "/files/" + outputid)
        print()
        print('---response---')
        response = self.c.get('/jobs/' + jobid + '/files/' + outputid, HTTP_ACCEPT='application/json') 
        print(response.json())
        input()
        print()
        print("----------------------------------------------------")
        print("> POST the output classifier file " + outputid + " on the classifier endpoint to save it as a classifier")
        print('===request===')
        input("POST {'fid': " + outputid + "} ==> http://127.0.0.1:8000/classifier")
        print()
        print('---response---')
        response = self.c.post('/classifier', {'fid': outputid})
        print(response.json())        
        print()
        print()
        input("### END DEMO ### ")
        print()


###############################################################
class Transfer_function_demo(TestCase):
    c = Client()
    def setUp(self):
        # [Prepare] Create a user and login
        self.user = User.objects.create_user(
            username='demouser', password='12345')
        login = self.c.login(username='demouser', password='12345')
        # [Check] Log in worked
        self.assertTrue(login)

    def test_demo(self):
        print()
        input("### START TRANSFER FUNCTION DEMO ### ")
        print()
        print()
        print("----------------------------------------------------")
        print("> Post a json file in transfer endpoint")
        print('===request===')
        input("POST {'file': test_transfer_function.json} ==> http://127.0.0.1:8000/transfer")
        print()
        print('---response---')
        with open(settings.TEST_ROOT + "/test_transfer_function.json") as fp:
            response = self.c.post(
                '/transfer', {'name': 'file', 'filename': 'test', 'file': fp})
        fp.close()
        fid = str(response.json()['id'])
        print(response.json())
        input()
        print()
        print("----------------------------------------------------")
        print("> GET the json file " + fid)
        print('===request===')
        input("GET (Accept: application/json) ==> http://127.0.0.1:8000/transfer/" + fid)
        print()
        print('---response---')
        response = self.c.get('/transfer/' + fid, HTTP_ACCEPT='application/json')
        print(response.json())
        print()
        print("----------------------------------------------------")
        print("> Access the number_of_absorption_points from the json" + fid)
        print('~~~access~~~')
        input("responsejson['tfs'][0]['number_of_absorption_points']")
        print(response.json()['tfs'][0]['number_of_absorption_points'])
        print()
        print()
        input("### END DEMO ### ")
        print()


# ###############################################################
class Full_train_demo(TestCase):
    c = Client()
    def setUp(self):
        # [Prepare] Create a user and login
        self.user = User.objects.create_user(
            username='demouser', password='12345')
        login = self.c.login(username='demouser', password='12345')
        # [Check] Log in worked
        self.assertTrue(login)
        # [Prepare] Create a 'init' jobtype
        JobType.objects.create(name="init", version=1.0, description="Init a job")
        JobType.objects.create(name="train", version=1.0, description="Training job by Jean-Baptiste M.")


    def test_demo(self):
        print()
        input("### START FULL TRAIN DEMO ###########################")
        print()
        print("# ###################################################")
        input("# (1) JOBS")
        print()
        print("----------------------------------------------------")
        print("> Create a 'init' Job")
        print('===request===')
        input("POST {'type': 'init'} ==> http://127.0.0.1:8000/jobs/")
        print()
        print('---response---')
        response = self.c.post('/jobs/', {'type': 'init'})
        print(response.json())
        jobid = str(response.json()['id'])
        input()
        input(">> Create two other 'init' Jobs")
        response = self.c.post('/jobs/', {'type': 'init'})
        jobid2 = str(response.json()['id'])
        response = self.c.post('/jobs/', {'type': 'init'})
        jobid3 = str(response.json()['id'])
        input(">> Done !")
        print()
        print("----------------------------------------------------")
        print("> Get all Jobs")
        print('===request===')
        input("GET ==> http://127.0.0.1:8000/jobs/")
        print()
        print('---response---') 
        response = self.c.get('/jobs/')
        print(response.json())
        input()
        print()
        print("----------------------------------------------------")
        print("> Get the Job " + jobid)
        print('===request===')
        input("GET ==> http://127.0.0.1:8000/jobs/" + jobid)
        print()
        print('---response---')
        response = self.c.get('/jobs/' + jobid)
        print(response.json())
        input()
        print()
        print("----------------------------------------------------")
        print("> Delete the Job " + jobid3)
        print('===request===')
        input("DELETE ==> http://127.0.0.1:8000/jobs/" + jobid3)
        print()
        print('---response---')
        response = self.c.delete('/jobs/' + jobid3)
        print(response.json())
        input()
        print()
        print("----------------------------------------------------")
        print("> Get the Job " + jobid3)
        print('===request===')
        input("GET ==> http://127.0.0.1:8000/jobs/" + jobid3)
        print()
        print('---response---')
        response = self.c.get('/jobs/' + jobid3)
        print(response.json())
        input()
        print("# ###################################################")
        input("# (2) FILES")
        print()
        print("----------------------------------------------------")
        print("> Post a file in job " + jobid)
        print('===request===')
        input("POST {'file': test_features.csv} ==> http://127.0.0.1:8000/jobs/" + jobid + "/files/")
        print()
        print('---response---')
        with open(settings.TEST_ROOT + "/test_features.csv") as fp:
            response = self.c.post(
                '/jobs/' + jobid + '/files/', {'name': 'file', 'filename': 'test', 'file': fp})
        fp.close()
        fileid = str(response.json()['id'])
        print(response.json())
        input()
        input(">> Add a second file to the Job " + jobid + " and a third file to the Job " + jobid2)
        with open(settings.TEST_ROOT + "/test") as fp:
            response = self.c.post(
                '/jobs/' + jobid + '/files/', {'name': 'file', 'filename': 'test', 'file': fp})
        fp.close()
        fileid2 = str(response.json()['id'])
        with open(settings.TEST_ROOT + "/test") as fp:
            response = self.c.post(
                '/jobs/' + jobid2 + '/files/', {'name': 'file', 'filename': 'test', 'file': fp})
        fp.close()
        fileid3 = str(response.json()['id'])
        input(">> Done !")
        print()
        print("----------------------------------------------------")
        print("> Get the Job " + jobid + " and check the status")
        print('===request===')
        input("GET ==> http://127.0.0.1:8000/jobs/" + jobid)
        print()
        print('---response---')
        response = self.c.get('/jobs/' + jobid)
        print(response.json())
        input()
        print()
        print("----------------------------------------------------")
        print("> Get all Files in all jobs ")
        print('===request===')
        input("GET ==> http://127.0.0.1:8000/files/")
        print()
        print('---response---') 
        response = self.c.get('/files/')
        print(response.json())
        input()
        print()
        print("----------------------------------------------------")
        print("> Get all Files in job " + jobid)
        print('===request===')
        input("GET ==> http://127.0.0.1:8000//jobs/" + jobid + "/files/")
        print()
        print('---response---') 
        response = self.c.get('/jobs/' + jobid + '/files/')
        print(response.json())
        input()
        print()
        print("----------------------------------------------------")
        print("> Get all Files in job " + jobid2)
        print('===request===')
        input("GET ==> http://127.0.0.1:8000/jobs/" + jobid2 + "/files/")
        print()
        print('---response---') 
        response = self.c.get('/jobs/' + jobid2 + '/files/')
        print(response.json())
        input()
        print()
        print("----------------------------------------------------")
        print("> Get the file " + fileid)
        print('===request===')
        input("GET (Accept: application/json) ==> http://127.0.0.1:8000/files/" + fileid)
        print()
        print('---response---')
        response = self.c.get('/files/' + fileid, HTTP_ACCEPT='application/json')
        print(response.json())
        input()
        print()
        print("----------------------------------------------------")
        print("> Get the file " + fileid3 + " of the job " + jobid2)
        print('===request===')
        input("GET (Accept: application/json) ==> http://127.0.0.1:8000/jobs/" + jobid2 + "/files/" + fileid3)
        print()
        print('---response---')
        response = self.c.get('/jobs/' + jobid2 + '/files/' + fileid3, HTTP_ACCEPT='application/json') 
        print(response.json())
        input()
        print()
        print("----------------------------------------------------")
        print("> Delete the file " + fileid2)
        print('===request===')
        input("DELETE ==> http://127.0.0.1:8000/files/" + fileid2)
        print()
        print('---response---')
        response = self.c.delete('/files/' + fileid2)
        print(response.json())
        input()
        print()
        print("----------------------------------------------------")
        print("> Delete the file " + fileid3 + " of the job " + jobid2)
        print('===request===')
        input("DELETE ==> http://127.0.0.1:8000/jobs/" + jobid2 + "/files/" + fileid3)
        print()
        print('---response---')
        response = self.c.delete('/jobs/' + jobid2 + '/files/' + fileid3)
        print(response.json())
        input()
        print()
        print("----------------------------------------------------")
        print("> Get all Files in all jobs ")
        print('===request===')
        input("GET ==> http://127.0.0.1:8000/files/")
        print()
        print('---response---') 
        response = self.c.get('/files/')
        print(response.json())
        input()
        print("# ###################################################")
        input("# (3) Launch Job")
        print()
        print("----------------------------------------------------")
        print("> PUT a train request to the job " + jobid + " with the input file features " + fileid)
        print('===request===')
        input("PUT {'type': 'train', 'inputs': {'inputs_features': " + fileid + "}} ==> http://127.0.0.1:8000/jobs/")
        print()
        print('---response---')
        response = self.c.put('/jobs/' + jobid, {'type': 'train', 'inputs': {'inputs_features': fileid}}, content_type='application/json')
        print(response.json())
        outputid = str(response.json()['outputs']['outputs_files'][0])
        input()
        print()
        print("----------------------------------------------------")
        print("> Get the Job " + jobid + " and check the status, outputs and type")
        print('===request===')
        input("GET ==> http://127.0.0.1:8000/jobs/" + jobid)
        print()
        print('---response---')
        response = self.c.get('/jobs/' + jobid)
        print(response.json())
        input()
        print()
        print("----------------------------------------------------")
        print("> Get the output file " + outputid + " of the job " + jobid)
        print('===request===')
        input("GET (Accept: application/json) ==> http://127.0.0.1:8000/jobs/" + jobid + "/files/" + outputid)
        print()
        print('---response---')
        response = self.c.get('/jobs/' + jobid + '/files/' + outputid, HTTP_ACCEPT='application/json') 
        print(response.json())
        input()
        print()
        print("# ###################################################")
        input("# (4) CLASSIFIER")
        print()
        print("----------------------------------------------------")
        print("> Send the output classifier file " + outputid + " on the classifier endpoint to save it as a classifier")
        print('===request===')
        input("POST {'fid': " + outputid + "} ==> http://127.0.0.1:8000/classifier")
        print()
        print('---response---')
        response = self.c.post('/classifier', {'fid': outputid})
        print(response.json())        
        print()
        print()
        input("### END DEMO ######################################## ")
        print()

 # ###############################################################


 # TODO separe the kind of demo of the full test into functions (job,file,run,classifier)
